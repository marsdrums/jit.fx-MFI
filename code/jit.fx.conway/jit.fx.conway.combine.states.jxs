<jittershader name="jit.fx.conway.combine.states">
	<param name="tex0" type="int" default="0" />
	<param name="fdbkTex" type="int" default="1" />
	<param name="uv" type="vec2" state="TEXCOORD" />
	<param name="texMat0" type="mat4" state="TEXTURE0_MATRIX" />
	<param name="texMat1" type="mat4" state="TEXTURE0_MATRIX" />
	<param name="amt" type="float" default="0.5" />
	<language name="glsl" version="1.5">
		<bind param="tex0" program="fp" />
		<bind param="fdbkTex" program="fp" />
		<bind param="uv" program="vp" />
		<bind param="texMat0" program="vp" />
		<bind param="texMat1" program="vp" />
		<bind param="amt" program="fp" />
		<program name="vp" type="vertex"  source="fx.vp.binary.glsl" />

<program name="fp" type="fragment"  >
<![CDATA[
#version 330 core

layout (location = 0) out vec4 outColor;

uniform samplerJit0 tex0;
uniform samplerJit1 fdbkTex;
uniform float amt;

in jit_PerVertex {
	vec2 uv0;
	vec2 uv1;
} jit_in;

float luma(vec3 x){ return dot(x, vec3(0.299, 0.587, 0.144)); }

void main(void) {

	ivec2 iuv = ivec2(jit_in.uv0);
	vec3 img = texelFetch(tex0, iuv).rgb;
	float lum = luma(img) > amt ? 1.0 : 0.0;

	float fdbk = texelFetch(fdbkTex, iuv).r;
	lum += fdbk;
	lum = min(1, lum);

	outColor = vec4(lum,0,0,1);
}
]]>
</program>
</language>
</jittershader>
