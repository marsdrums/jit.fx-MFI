<jittershader name="jit.fx.brass">
	<param name="tex0" type="int" default="0" />
	<param name="uv" type="vec2" state="TEXCOORD" />
	<param name="texMat" type="mat4" state="TEXTURE0_MATRIX" />
	<param name="width" type="float" default="1.0" />
  	<param name="offset" type="vec4" default="0.5 0.5 0.5 0.5" />
	<language name="glsl" version="1.5">
		<bind param="tex0" program="fp" />
		<bind param="uv" program="vp" />
		<bind param="texMat" program="vp" />
		<bind param="width" program="fp" />
    	<bind param="offset" program="fp" />
		<program name="vp" type="vertex" source="fx.vp.unary.glsl" />

<program name="fp" type="fragment"  >
<![CDATA[
#version 330 core

layout (location = 0) out vec4 outColor;

uniform samplerJit0 tex0;
uniform float width;
uniform vec4 offset;

in jit_PerVertex {
	vec2 uv;
} jit_in;

void main(void) {

	outColor = offset;
  outColor += texelFetch(tex0, ivec2(jit_in.uv + vec2(-width, -width)));
  outColor += texelFetch(tex0, ivec2(jit_in.uv + vec2(0, -width)));
  outColor += texelFetch(tex0, ivec2(jit_in.uv + vec2(-width, 0)));
  outColor -= texelFetch(tex0, ivec2(jit_in.uv + vec2( width,  0)));
  outColor -= texelFetch(tex0, ivec2(jit_in.uv + vec2( 0, width)));
  outColor -= texelFetch(tex0, ivec2(jit_in.uv + vec2( width, width)));

}
]]>
</program>
</language>
</jittershader>
