<jittershader name="jit.fx.hue">
	<param name="tex0" type="int" default="0" />
	<param name="uv" type="vec2" state="TEXCOORD" />
	<param name="texMat" type="mat4" state="TEXTURE0_MATRIX" />
	<param name="hue" type="float" default="0.0" />
	<language name="glsl" version="1.5">
		<bind param="tex0" program="fp" />
		<bind param="uv" program="vp" />
		<bind param="texMat" program="vp" />
		<bind param="hue" program="fp" />
    <program name="vp" type="vertex" source="fx.vp.unary.glsl" />
    <include source="color_functions.glsl" program="fp" />

<program name="fp" type="fragment"  >
<![CDATA[
#version 330 core

layout (location = 0) out vec4 outColor;

uniform samplerJit0 tex0;
uniform float hue;

in jit_PerVertex {
	vec2 uv;
} jit_in;


void main(void) {

	vec3 col = texelFetch(tex0, ivec2(jit_in.uv)).rgb;
	col = rgb2hsl(col.r, col.g, col.b);
	col.x += hue/360;
	outColor = vec4(hsl2rgb(col.r, col.g, col.b), 1.0);

}
]]>
</program>
</language>
</jittershader>
